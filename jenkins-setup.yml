---
- name: Create Docker Container and Update APT packages
  hosts: 172.27.83.5
  gather_facts: false
  tasks:
  - name: Install pip
    apt:
      name: python3-pip
      state: present

  - name: Install requests library
    pip:
      name: requests
      executable: pip3
  - name: Attempt and graceful roll back demo
    block: 
    - name: Create Docker Container
      docker_container:
        name: my_container
        image: ubuntu:20.04
        state: started
        ports: "2222:22"
        volumes:
          - /etc/ssh/sshd_config:/etc/ssh/sshd_config
        command: sleep infinity
    - name: Run a simple commands (argv)
      community.docker.docker_container_exec:
        container: my_container
        argv:
          - /bin/bash
          - "-c"
          - "ls -lha > /dev/stderr"
        chdir: /root
      register: result
    - name: Install required packages
      community.docker.docker_container_exec:
        container: my_container
        argv:
          - /bin/bash
          - "-c"
          - apt-get update 
    - name: Install required packages 2
      community.docker.docker_container_exec:
        container: my_container
        argv:
          - /bin/bash
          - "-c"
          - "apt-get install  openjdk-11-jdk  wget  apt-transport-https  ca-certificates  gnupg2  software-properties-common  -y"
      register: result
    - name: Add Jenkins repository key
      community.docker.docker_container_exec:
        container: my_container
        argv:
          - /bin/bash
          - "-c"
          - wget -O /usr/share/keyrings/jenkins-keyring.asc https://pkg.jenkins.io/debian-stable/jenkins.io-2023.key
      register: result
    - name: Add Jenkins repository
      community.docker.docker_container_exec:
        container: my_container
        argv:
          - /bin/bash
          - "-c"
          - "sh -c 'echo deb [signed-by=/usr/share/keyrings/jenkins-keyring.asc]  https://pkg.jenkins.io/debian-stable binary/ |  tee /etc/apt/sources.list.d/jenkins.list > /dev/null' "
      register: result
    - name: Update package lists
      community.docker.docker_container_exec:
        container: my_container
        argv:
          - apt-get
          - update
      register: result
    - name: Install Jenkins
      community.docker.docker_container_exec:
        container: my_container
        argv:
          - /bin/bash
          - "-c"
          - " apt-get install jenkins -y"
      register: result
    - name: Start Jenkins service
      community.docker.docker_container_exec:
        container: my_container
        argv:
          - /bin/sh
          - "-c"
          - "systemctl start jenkins"
     # register: result
    - name: Check Jenkins status
      community.docker.docker_container_exec:
        container: my_container
        argv:
          - /bin/sh
          - "-c"
          - "systemctl status jenkins"
      register: jenkins_status
      until: jenkins_status.stdout.find("active (running)")  != -1
      retries: 10
      delay: 10

    rescue: # <--- a rescue
    - name: Check if the task failed
      fail:
        msg: "Task failed, stopping and removing the container"
      when: result is failed
      ignore_errors: true
    - name: Stop Docker Container
      docker_container:
        name: my_container
        state: stopped
      when: result is failed
    - name: Remove Docker Container
      docker_container:
        name: my_container
        state: absent
      when: result is failed
    always: # <--- an always
    - name: Always do this
      ansible.builtin.debug:
        msg: "This always executes"